T = 10
W = 100

for tc in range(1, T+1):                 #Test case 개수 만큼 반복하기
    N = int(input())                     #덤프 횟수 입력
    H = list(map(int, input().split()))  #상자 높이 리스트 만들기
    for i in range(N):                   #덤프 횟수만큼 최대값 최소값 찾기 반복하기
        M = 0                            #최대값 초기값 0설정
        m = 100000                       #최소값 초기값 0설정
        M_idx = 0                        #최대값 위치 초기값 0설정
        m_idx = 0                        #최소값 위치 초기값 0설정
        for j in range(W):               #가로 길이 100만큼 최대값 최소값 변경 반복하기
            if M < H[j]:                 #초기 최대값이 해당 높이보다 작다면,
                M = H[j]                 #해당 높이를 최대값으로 변경하기
                M_idx = j                #해당 높이에 해당하는 위치 최대값 위치로 지정해주기
            if m > H[j]:                 #초기 최소값이 해당 높이보다 크다면,
                m = H[j]                 #해당 높이를 최소값으로 변경하기
                m_idx = j                #해당 높이에 해당하는 위치 최소값 위치로다면,
        H[M_idx] -= 1                    #최대값에서 -1하기
        H[m_idx] += 1                    #최소값에서 +1하기

    Ma = 0                               #새로운 최대값 초기값 설정
    Mi = 100000                          #새로운 최소값 초기값 설정
    for k in range(W):                   #가로 길이만큼 반복해서 최대값, 최소값 차이 구하기 위한 최대, 최소 구하기
        if Ma < H[k]:                    #초기 최대값보다 해당 상자 높이가 크다면,
            Ma = H[k]                    #해당 높이를 최대값으로 변경하기
        if Mi > H[k]:                    #초기 최소값보다 해당 상자 높이가 작다면,
            Mi = H[k]                    #해당 높이를 최소값으로 변경하기

    D = Ma - Mi                          #덤프 이후 최대값 - 최소값 구하기
    print('#{} {}'.format(tc, D))        #양식에 맞게 출력하기